% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CppODE.R
\name{CppFun}
\alias{CppFun}
\title{Generate C++ code for ODE models with sensitivities}
\usage{
CppFun(
  odes,
  events = NULL,
  fixed = NULL,
  compile = TRUE,
  modelname = NULL,
  deriv = TRUE,
  secderiv = FALSE,
  verbose = FALSE
)
}
\arguments{
\item{odes}{Named character vector of ODEs (one entry per state).}

\item{events}{Optional \code{data.frame} specifying events with columns:
\code{var} (state), \code{time} (numeric or symbol), \code{value}, and \code{method}
(\code{"replace"}, \code{"add"}, or \code{"multiply"}).}

\item{fixed}{Optional character vector naming states and/or parameters
to be treated as fixed (i.e., not included as independent variables
in sensitivity analysis). Defaults to none.}

\item{compile}{Logical, if \code{TRUE} compile the generated C++ file.}

\item{modelname}{Optional string used for the output filename.
Defaults to a random identifier.}

\item{deriv}{Logical, compute first-order sensitivities (Jacobian).}

\item{secderiv}{Logical, compute second-order sensitivities (Hessian).}

\item{verbose}{Logical, print progress messages.}
}
\value{
The name of the generated C++ file (character scalar). Attributes
include the ODE equations, variables, parameters, fixed variables, events,
symbolic Jacobian, and solver type.
}
\description{
This function builds a complete C++ implementation of a system of ordinary
differential equations (ODEs), including:
}
\details{
\itemize{
\item The ODE right-hand side and its Jacobian (for stiff solvers)
\item Optional fixed-time events (state replacement, addition, multiplication)
\item First- and second-order sensitivities with respect to model parameters
and/or initial conditions
\item Selection of "fixed" variables that are excluded from sensitivity analysis
}

The generated C++ file can be compiled and called from R to efficiently
solve the ODE system and return trajectories together with sensitivities.
}
